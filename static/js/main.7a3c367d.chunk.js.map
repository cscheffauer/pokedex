{"version":3,"sources":["constants.js","components/Card.js","components/Layout/LoadingSpinner/LoadingSpinner.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/Layout/Header/Header.js","components/Layout/TechnologyInfoButton/TechnologyInfoButton.js","components/Layout/ImprintButton/ImprintButton.js","containers/MainPage/MainPage.js","api/api.js","containers/App.js","actions.js","serviceWorker.js","reducers.js","index.js"],"names":["INITIAL_ROUTE","IMPRINT_ROUTE","TECHNOLOGYINFO_ROUTE","Card","_ref","name","height","mass","birth_year","species","id","react_default","a","createElement","react","className","Array","isArray","length","alt","src","concat","nameImageSwitch","replace","LoadingSpinner","swapiLabel","href","target","rel","CardList","people","morePeoplePending","map","person","i","src_components_Card","key","Layout_LoadingSpinner_LoadingSpinner","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","setState","Component","Header","nextProps","nextState","onRouteChange","onClick","TechnologyInfoButton","ImprintButton","AsyncPageTechnologyInfo","lazy","__webpack_require__","e","then","bind","AsyncPageImprint","MainPage","getRouteComponent","route","onSearchChange","firstPeoplePending","src_components_SearchBox","src_components_Scroll","components_ErrorBoundry","src_components_CardList","filterPeople","fallback","filter","toLowerCase","includes","searchField","onRequestPeople","_this$props","page","Layout_Header_Header","Layout_TechnologyInfoButton_TechnologyInfoButton","Layout_ImprintButton_ImprintButton","getFirstPeople","asyncToGenerator","regenerator_default","mark","_callee","link","nextLink","data","data_json","wrap","_context","prev","next","fetch","sent","json","results","abrupt","stop","_x","apply","arguments","getMorePeople","_ref2","_callee2","tempPeople","morePeople","_context2","undefined","toConsumableArray","_x2","replaceSpeciesName","_ref3","_callee4","_context4","Promise","all","_ref4","_callee3","_context3","_x4","_x5","_x3","App","containers_MainPage_MainPage","connect","changeRoute","searchPeople","requestPeople","dispatch","payload","setRoute","event","value","firstPeople","firstPeopleWSpecies","morePeopleWSpecies","position","catch","error","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initialRoute","initialStateSearch","initialStatePeople","logger","createLogger","rootReducer","combineReducers","action","assign","slice","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7a3c367d.chunk.js","sourcesContent":["/*\n* REDUX\n*/\n\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_FIRST_PEOPLE_PENDING = 'REQUEST_FIRST_PEOPLE_PENDING';\nexport const REQUEST_FIRST_PEOPLE_SUCCESS = 'REQUEST_FIRST_PEOPLE_SUCCESS';\nexport const REQUEST_FIRST_IMAGES_SUCCESS = 'REQUEST_FIRST_IMAGES_SUCCESS';\nexport const REQUEST_FIRST_PEOPLE_FAILED = 'REQUEST_FIRST_PEOPLE_FAILED';\nexport const REQUEST_MORE_PEOPLE_PENDING = 'REQUEST_MORE_PEOPLE_PENDING';\nexport const REQUEST_MORE_PEOPLE_SUCCESS = 'REQUEST_MORE_PEOPLE_SUCCESS';\nexport const REQUEST_MORE_IMAGES_PENDING = 'REQUEST_MORE_IMAGES_PENDING';\nexport const REQUEST_MORE_IMAGES_SUCCESS = 'REQUEST_MORE_IMAGES_SUCCESS';\nexport const REQUEST_MORE_PEOPLE_FAILED = 'REQUEST_MORE_PEOPLE_FAILED';\nexport const CHANGE_ROUTE = 'CHANGE_ROUTE';\n\n/*\n* REACT\n*/\nexport const INITIAL_ROUTE = 'main';\nexport const IMPRINT_ROUTE = 'imprint';\nexport const TECHNOLOGYINFO_ROUTE = 'technology';","import React, { Fragment } from 'react';\n\nimport \"./Card.css\";\n\nconst nameImageSwitch = (name, species) => {\n    switch (name) {\n        case 'Luke Skywalker':\n            return <img alt={`${name}`} src={`images/cards/luke-skywalker.png`} />;\n        case 'R2-D2':\n            return <img alt={`${name}`} src={`images/cards/r2d2.png`} />;\n        case 'Darth Vader':\n            return <img alt={`${name}`} src={`images/cards/darth-vader.png`} />;\n        case 'C-3PO':\n            return <img alt={`${name}`} src={`images/cards/c3p0.png`} />;\n        case 'Leia Organa':\n            return <img alt={`${name}`} src={`images/cards/princess-leia.png`} />;\n        case 'Obi-Wan Kenobi':\n            return <img alt={`${name}`} src={`images/cards/obiwan-kenobi.png`} />;\n        case 'Boba Fett':\n            return <img alt={`${name}`} src={`images/cards/boba-fett.png`} />;\n        case 'Ackbar':\n            return <img alt={`${name}`} src={`images/cards/admiral-ackbar.png`} />;\n        case 'Chewbacca':\n            return <img alt={`${name}`} src={`images/cards/chewbacca.png`} />;\n        case 'Darth Maul':\n            return <img alt={`${name}`} src={`images/cards/darth-maul.png`} />;\n        case 'Palpatine':\n            return <img alt={`${name}`} src={`images/cards/emperor-palpatine.png`} />;\n        case 'Greedo':\n            return <img alt={`${name}`} src={`images/cards/greedo.png`} />;\n        case 'Han Solo':\n            return <img alt={`${name}`} src={`images/cards/han-solo.png`} />;\n        case 'Jabba Desilijic Tiure':\n            return <img alt={`${name}`} src={`images/cards/jabba-the-hutt.png`} />;\n        case 'Jango Fett':\n            return <img alt={`${name}`} src={`images/cards/jango-fett.png`} />;\n        case 'Lando Calrissian':\n            return <img alt={`${name}`} src={`images/cards/lando-calrissian.png`} />;\n        case 'Lobot':\n            return <img alt={`${name}`} src={`images/cards/lobot.png`} />;\n        case 'Qui-Gon Jinn':\n            return <img alt={`${name}`} src={`images/cards/qui-gon-jinn.png`} />;\n        case 'Yoda':\n            return <img alt={`${name}`} src={`images/cards/yoda.png`} />;\n        case 'Wicket Systri Warrick':\n            return <img alt={`${name}`} src={`images/cards/ewok.png`} />;\n        default: {\n            switch (species) {\n                case 'Human':\n                    return <img alt={`${name}`} src={`images/cards/red-five.png`} />;\n                case 'Mirialan':\n                    return <img alt={`${name}`} src={`images/cards/mirialan.png`} />;\n                case \"Twi'lek\":\n                    return <img alt={`${name}`} src={`images/cards/twilek.png`} />;\n                default:\n                    return <img alt={`${name}`} src={`images/cards/nothing_declared.png`} />;\n            }\n        }\n    }\n}\n\n\nconst Card = ({ name, height, mass, birth_year, species, id }) => {         //receiving props and destructuring them in the brackets\n\n    return (\n        <Fragment>\n            <div className='card tc dib br3 pa3 ma2 grow bw2 shadow-5'>\n                {\n                    (Array.isArray(species) && species.length > 0) ?\n                        <img alt={`loading_image`} src={`images/cards/loading_image.png`} />\n                        : nameImageSwitch(name, species)\n                }\n                <div>\n                    <h2>{name}</h2>\n                    <p>Height: {height} {height === \"unknown\" ? '' : 'cm'}</p>\n                    <p>Mass: {mass} {mass === \"unknown\" ? '' : 'kg'}</p>\n                    <p>Birth Year: {birth_year.replace(\"BBY\", \" BBY\")}</p>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Card;\n\n","import React from 'react'\n\nimport './LoadingSpinner.css';\n\n\nconst LoadingSpinner = ({ swapiLabel }) => {\n    return (\n        <div className=\"loadingContainer\">\n            <div className=\"circleLoading\"></div>\n            {\n                swapiLabel &&\n                <span className=\"morePeopleLoading\">fetching from <a href=\"https://swapi.co\" target=\"_blank\" rel=\"noopener noreferrer\">swapi.co</a></span>\n            }\n        </div>\n    );\n}\n\nexport default LoadingSpinner;\n","import React, { Fragment } from 'react';\nimport Card from './Card';\nimport LoadingSpinner from './Layout/LoadingSpinner/LoadingSpinner'\n\nimport './CardList.css';\n\nconst CardList = ({ people, morePeoplePending }) => {          //using people array as props\n    /*\n    if (true) {\n        throw new Error('noooo!');          this would throw an error to test the error boundry written in ErrorBoundry.js\n    }*/\n    return (\n        <Fragment>  {/* this fragment is to wrap all returned cards, but will avoid a additional wrap div */}\n            {   //wrap in curly brackets cause it's javascript\n                people.map((person, i) => {           //for each user in people array\n                    return (                        //return of the map function \n                        <Card\n                            key={i}\n                            id={i}\n                            name={person.name}\n                            height={person.height}\n                            mass={person.mass}\n                            birth_year={person.birth_year}\n                            species={person.species}\n                        />);\n                })\n            }\n            {\n                morePeoplePending &&\n                <LoadingSpinner swapiLabel={true} />\n            }\n        </Fragment>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nimport './SearchBox.css';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className=\"pa1\">\n            <input\n                aria-label='Search Characters'\n                className=\"pa3 searchBox\"\n                type='search'\n                placeholder='Search characters'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n/*\nScroll is a wrapping component\n*/\n\nimport './Scroll.css';\n\nconst Scroll = (props) => {\n    return (\n        <div className=\"scrollContainer\" style={{  }}>\n            {props.children}        {/* scroll will use it's children to render here*/}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch() {        //if an error appears, this function will run = like try/catch in Java\n        this.setState({ hasError: true })       //the state will be set to hasError=true and it will be rerendered \n    }\n\n    render() {\n        if (this.state.hasError) {      //if the error appeared, a proper error message will be displayed\n            return <h1>Ooops. That is not good</h1>\n        }\n        return this.props.children      //will render the cardlist component when no errors appeared\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\n\nimport './Header.css';\nimport { INITIAL_ROUTE } from '../../../constants';\n\n\nclass Header extends Component {\n    shouldComponentUpdate(nextProps, nextState) {       //the lifecycle hook gives us the ability to restrict the updating of a component    \n        return false;                                   //never update this component! \n    }\n    render() {\n        const { onRouteChange } = this.props;\n        return <h1 className=\"header f1\" onClick={() => onRouteChange(INITIAL_ROUTE)}>Star Wars Characters</h1>;\n    }\n}\n\nexport default Header;","import React from 'react'\n\nimport './TechnologyInfoButton.css';\nimport { TECHNOLOGYINFO_ROUTE } from '../../../constants';\n\n\nconst TechnologyInfoButton = ({ onRouteChange }) => {\n    return <div className=\"TechnologyInfoButtonContainer\"> <img className=\"TechnologyInfoButton\" onClick={() => onRouteChange(TECHNOLOGYINFO_ROUTE)} src=\"/images/code.png\"></img></div>\n}\n\nexport default TechnologyInfoButton;","import React from 'react'\n\nimport './ImprintButton.css';\nimport { IMPRINT_ROUTE } from '../../../constants';\n\n\nconst ImprintButton = ({ onRouteChange }) => {\n    return <div className=\"ImprintButtonContainer\"> <img className=\"ImprintButton\" onClick={() => onRouteChange(IMPRINT_ROUTE)} src=\"/images/imprint.png\"></img> </div>\n}\n\nexport default ImprintButton;","import React, { Component, Suspense, lazy, Fragment } from 'react';   //destructuring (instead of React.Component)\n\nimport {\n    INITIAL_ROUTE,\n    IMPRINT_ROUTE,\n    TECHNOLOGYINFO_ROUTE\n} from '../../constants'       //get constants form constants file\n\nimport CardList from '../../components/CardList';\nimport SearchBox from '../../components/SearchBox';\nimport Scroll from '../../components/Scroll';\nimport ErrorBoundry from '../../components/ErrorBoundry';\nimport Header from '../../components/Layout/Header/Header';\nimport LoadingSpinner from '../../components/Layout/LoadingSpinner/LoadingSpinner';\nimport TechnologyInfoButton from '../../components/Layout/TechnologyInfoButton/TechnologyInfoButton';\n\n\nimport './MainPage.css'; //to import the appropriate css file for this component\nimport ImprintButton from '../../components/Layout/ImprintButton/ImprintButton';\n\n\nconst AsyncPageTechnologyInfo = lazy(() => import('../../components/Pages/TechnologyInfo/TechnologyInfo'));\nconst AsyncPageImprint = lazy(() => import('../../components/Pages/Imprint/Imprint'));\n\nclass MainPage extends Component {   //class App will use the component lib / Component expects that there is a render function in this class\n\n    getRouteComponent = (route, onSearchChange, firstPeoplePending, morePeoplePending) => {\n\n        if (route === INITIAL_ROUTE) {\n            return (\n                <Fragment>\n                    <SearchBox searchChange={onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            {firstPeoplePending ?  //return html back depending on the isPending flag\n                                <LoadingSpinner swapiLabel={true} />\n                                :\n                                <CardList people={this.filterPeople()} morePeoplePending={morePeoplePending} />\n                            }\n                        </ErrorBoundry>\n                    </Scroll>\n                </Fragment>\n            )\n        } else if (route === IMPRINT_ROUTE) {\n            return (\n                <Suspense fallback={<LoadingSpinner swapiLabel={false} />}>\n                    <AsyncPageImprint />\n                </Suspense>\n            )\n        } else if (route === TECHNOLOGYINFO_ROUTE) {\n            return (\n                <Suspense fallback={<LoadingSpinner swapiLabel={false} />}>\n                    <AsyncPageTechnologyInfo />\n                </Suspense>\n            )\n        }\n    }\n\n    componentDidMount() {\n        this.props.onRequestPeople();\n    }\n    filterPeople = () => {\n        return this.props.people.filter(person => {      //filter the people and return them to filteredpeople\n            return person.name.toLowerCase().includes(this.props.searchField.toLowerCase());\n        });\n    }\n\n    render() {\n        const { route, onRouteChange, onSearchChange, firstPeoplePending, morePeoplePending } = this.props;\n        let page = this.getRouteComponent(route, onSearchChange, firstPeoplePending, morePeoplePending);\n\n        return (\n            <div className='tc' >\n                <div className='wrapper'>\n                    <Header onRouteChange={onRouteChange} />\n                    {page}\n                </div>\n                <TechnologyInfoButton onRouteChange={onRouteChange} />\n                <ImprintButton onRouteChange={onRouteChange} />\n            </div>\n        )\n    }\n}\nexport default MainPage;\n\n//connect is a higher order function - will return another function -> that's why it is written that way above\n//\n//connect() is subscribed to the redux store now and it accepts 2 params: \n//1st is mapStateToProps: what state the component is interested in\n//2nd is mapDispatchToProps: ","export const getFirstPeople = async (link) => {\n    let nextLink = \"\";\n    let data = await fetch(link);\n    let data_json = await data.json();\n    let people = data_json.results;\n    nextLink = await data_json.next;\n    return { people, nextLink };\n}\n\nexport const getMorePeople = async (link) => {\n    let tempPeople = [];\n    let nextLink = undefined;\n\n    for (let i = 0; i < 6; i++) {\n        link = (nextLink === undefined) ? link : nextLink;\n        let data = await fetch(link);\n        let data_json = await data.json();\n        let morePeople = data_json.results;\n\n        nextLink = await data_json.next;\n        tempPeople = [...tempPeople, ...morePeople];\n    }\n    return tempPeople;\n}\n\n\nexport const replaceSpeciesName = async (people) => {\n    return await Promise.all(\n        people.map(async (person, i) => {\n            if (Array.isArray(person.species) && person.species.length) {\n\n                let data = await fetch(person.species[0]);\n                let data_json = await data.json();\n                person.species = await data_json.name;\n                return person;\n            }\n            else {\n                return person;\n            }\n        })\n    );\n}\n","import React, { Component } from 'react';   //destructuring (instead of React.Component)\nimport { connect } from 'react-redux';\nimport MainPage from './MainPage/MainPage'\n\nimport { setRoute, setSearchField, requestPeople } from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        route: state.changeRoute.route,\n        searchField: state.searchPeople.searchField,            //prop searchfield will get the state of the searchPeople.searchField\n        firstPeoplePending: state.requestPeople.firstPeoplePending,               // -''-\n        morePeoplePending: state.requestPeople.morePeoplePending,\n        people: state.requestPeople.people                      // -''-\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        //onSearchChange is a function which will pass the event to it's inner \n        //there the dispatch will get called which will call the setSearchField action in redux and \n        //it will hand over the event.target.value (which is the stuff typed in the search box)\n        onRouteChange: (route) => dispatch(setRoute(route)),\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestPeople: () => dispatch(requestPeople())                    //requestPeople needs the dispatch function\n    }\n}\n\nclass App extends Component {   //only the react \n    render() {\n        return <MainPage {...this.props} />\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n//connect is a higher order function - will return another function -> that's why it is written that way above\n//\n//connect() is subscribed to the redux store now and it accepts 2 params: \n//1st is mapStateToProps: what state the component is interested in\n//2nd is mapDispatchToProps: ","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_FIRST_PEOPLE_PENDING,\n    REQUEST_FIRST_PEOPLE_SUCCESS,\n    REQUEST_FIRST_IMAGES_SUCCESS,\n    REQUEST_MORE_PEOPLE_PENDING,\n    REQUEST_MORE_PEOPLE_SUCCESS,\n    REQUEST_MORE_IMAGES_SUCCESS,\n    REQUEST_FIRST_PEOPLE_FAILED,\n    CHANGE_ROUTE\n} from './constants'       //get constants form constants file\n\n\nimport { getFirstPeople, getMorePeople, replaceSpeciesName } from './api/api';\n\n//first action in here - this action will receive input of text which the user types - it will return a object with type and payload\n//this action will send the object on to the reducer\nexport const setRoute = (route) => ({\n    type: CHANGE_ROUTE,                  //constants are usually capitalized - we use a variable here to avoid misspelling \n    payload: route\n})\n\n\n\n//first action in here - this action will receive input of text which the user types - it will return a object with type and payload\n//this action will send the object on to the reducer\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,                  //constants are usually capitalized - we use a variable here to avoid misspelling \n    payload: text\n})\n\n//actions can just be objects {}\n\nexport const requestPeople = () => (dispatch) => {          //this action will take the dispatch to get access to it - requestPeople returns a function and thunk middleware will hook on it\n    dispatch({ type: REQUEST_FIRST_PEOPLE_PENDING });             //dispatch the pending action - \"will call the action in reducer\" - so the PENDING will be called right away\n    getFirstPeople('https://swapi.co/api/people/')         //make this http request & convert it to JSON                    \n        .then(firstPeople => dispatch({ type: REQUEST_FIRST_PEOPLE_SUCCESS, payload: firstPeople.people, next: firstPeople.nextLink }))        //call the SUCCESS in reducer with the user payload\n        .then(firstPeople => {\n            replaceSpeciesName(firstPeople.payload)\n                .then(firstPeopleWSpecies => {\n                    dispatch({ type: REQUEST_FIRST_IMAGES_SUCCESS, payload: firstPeopleWSpecies });\n                    dispatch({ type: REQUEST_MORE_PEOPLE_PENDING });\n                    getMorePeople(firstPeople.next)\n                        .then(morePeople => dispatch({ type: REQUEST_MORE_PEOPLE_SUCCESS, payload: morePeople }))\n                        .then(morePeople => {\n                            replaceSpeciesName(morePeople.payload)\n                                .then(morePeopleWSpecies => {\n                                    dispatch({ type: REQUEST_MORE_IMAGES_SUCCESS, payload: { people: morePeopleWSpecies, position: firstPeople.payload.length } });\n                                })\n                        })\n                })\n        })\n        .catch(error => dispatch({ type: REQUEST_FIRST_PEOPLE_FAILED, payload: error }))\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    INITIAL_ROUTE,\n    CHANGE_SEARCH_FIELD,\n    REQUEST_FIRST_PEOPLE_PENDING,\n    REQUEST_FIRST_PEOPLE_SUCCESS,\n    REQUEST_FIRST_IMAGES_SUCCESS,\n    REQUEST_MORE_PEOPLE_PENDING,\n    REQUEST_MORE_PEOPLE_SUCCESS,\n    REQUEST_MORE_IMAGES_SUCCESS,\n    REQUEST_FIRST_PEOPLE_FAILED,\n    CHANGE_ROUTE\n} from './constants'       //get constants form constants file\n\n\n\n\n\n\n/**\n * CHANGEROUTE REDUCER\n */\n\n\n//define the initialstate in the reducer \nconst initialRoute = {\n    route: INITIAL_ROUTE         //initial object in the redux store\n}\n\n//searchPeople function -> use default params (initialState, empty action object)\n//reducers get a input of a state and action -> if this one get something we care about (like searching people), we will do something\nexport const changeRoute = (state = initialRoute, action = {}) => {\n    switch (action.type) {\n        case CHANGE_ROUTE:       //if a CHANGE_SEARCH_FIELD action comes in, we will do something\n            return Object.assign({}, state, { route: action.payload })\n        //1st param= new object\n        //2nd param= state we receiving\n        //3rd param=is what we want to change in the state\n        //so what we return is a new object with everything in the state + new searchField -> 2nd principle: State is read only\n        default:\n            return state    //if a other action comes in, return the state as it was passed over and do not change anything\n    }\n}\n\n\n\n\n/**\n * SEARCHPEOPLE REDUCER\n */\n\n\n//define the initialstate in the reducer \nconst initialStateSearch = {\n    searchField: ''         //initial object in the redux store\n}\n\n//searchPeople function -> use default params (initialState, empty action object)\n//reducers get a input of a state and action -> if this one get something we care about (like searching people), we will do something\nexport const searchPeople = (state = initialStateSearch, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:       //if a CHANGE_SEARCH_FIELD action comes in, we will do something\n            return Object.assign({}, state, { searchField: action.payload })\n        //1st param= new object\n        //2nd param= state we receiving\n        //3rd param=is what we want to change in the state\n        //so what we return is a new object with everything in the state + new searchField -> 2nd principle: State is read only\n        default:\n            return state    //if a other action comes in, return the state as it was passed over and do not change anything\n    }\n}\n\n/**\n * REQUESTING PEOPLE REDUCER\n */\n\n\n\nconst initialStatePeople = {\n    firstPeoplePending: false,\n    morePeoplePending: false,\n    people: [],\n    error: ''\n}\n\nexport const requestPeople = (state = initialStatePeople, action = {}) => {\n    switch (action.type) {\n        case REQUEST_FIRST_PEOPLE_PENDING:\n            return Object.assign({}, state, { firstPeoplePending: true })      //everything in the state + new state isPending\n        case REQUEST_FIRST_PEOPLE_SUCCESS:\n            return Object.assign({}, state, { people: action.payload, firstPeoplePending: false })      //everything in the state + new state isPending & people\n        case REQUEST_FIRST_IMAGES_SUCCESS:\n            return Object.assign({}, state, { people: action.payload })      //everything in the state + new state isPending & people\n        case REQUEST_MORE_PEOPLE_PENDING:\n            return Object.assign({}, state, { morePeoplePending: true })      //everything in the state + new state isPending\n        case REQUEST_MORE_PEOPLE_SUCCESS:\n            return Object.assign({}, state, { people: state.people.concat(action.payload), morePeoplePending: false })      //everything in the state + new state isPending & people\n        case REQUEST_MORE_IMAGES_SUCCESS:\n            return Object.assign({}, state, { people: [...state.people.slice(0, action.payload.position), ...action.payload.people] })      //everything in the state + new state isPending & people\n        case REQUEST_FIRST_PEOPLE_FAILED:\n            return Object.assign({}, state, { firstPeoplePending: false, error: action.payload })      //everything in the state + errorstate\n        default:\n            return state\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'          //importing the provider from the react-redux\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';      //to use tachyons lib\nimport { changeRoute, searchPeople, requestPeople } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ changeRoute, searchPeople, requestPeople });       //combine the reducers from the reducers file into one root reducer\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware, logger)));\n//to create the store with the root reducer and apply the thunkMiddleware and the logger to the store\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n//render the provider with the app to the html tag with root as id (is in public/index.html)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Scroll.js","constants.js","components/Card.js","components/Layout/LoadingSpinner/LoadingSpinner.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","components/Layout/Header/Header.js","components/Layout/TechnologyInfoButton/TechnologyInfoButton.js","components/Layout/ImprintButton/ImprintButton.js","containers/MainPage/MainPage.js","api/api.js","containers/App.js","actions.js","serviceWorker.js","reducers.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Scroll","props","a","createElement","className","style","children","INITIAL_ROUTE","IMPRINT_ROUTE","TECHNOLOGYINFO_ROUTE","Card","_ref","name","height","mass","birth_year","species","id","react_default","react","Array","isArray","length","alt","src","concat","nameImageSwitch","replace","LoadingSpinner","swapiLabel","href","target","rel","CardList","people","morePeoplePending","map","person","i","src_components_Card","key","Layout_LoadingSpinner_LoadingSpinner","SearchBox","searchChange","aria-label","type","placeholder","onChange","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","setState","Component","Header","nextProps","nextState","onRouteChange","onClick","TechnologyInfoButton","ImprintButton","AsyncPageTechnologyInfo","lazy","e","then","bind","AsyncPageImprint","MainPage","getRouteComponent","route","onSearchChange","firstPeoplePending","src_components_SearchBox","components_ErrorBoundry","src_components_CardList","filterPeople","fallback","filter","toLowerCase","includes","searchField","onRequestPeople","_this$props","page","Layout_Header_Header","Layout_TechnologyInfoButton_TechnologyInfoButton","Layout_ImprintButton_ImprintButton","getFirstPeople","asyncToGenerator","regenerator_default","mark","_callee","link","nextLink","data","data_json","wrap","_context","prev","next","fetch","sent","json","results","abrupt","stop","_x","apply","arguments","getMorePeople","_ref2","_callee2","tempPeople","morePeople","_context2","undefined","toConsumableArray","_x2","replaceSpeciesName","_ref3","_callee4","_context4","Promise","all","_ref4","_callee3","_context3","_x4","_x5","_x3","App","containers_MainPage_MainPage","connect","changeRoute","searchPeople","requestPeople","dispatch","payload","setRoute","event","value","firstPeople","firstPeopleWSpecies","morePeopleWSpecies","position","catch","error","Boolean","window","location","hostname","match","initialRoute","initialStateSearch","initialStatePeople","logger","createLogger","rootReducer","combineReducers","action","assign","slice","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1ff591b.chunk.js","sourcesContent":["import React from 'react';\n/*\nScroll is a wrapping component\n*/\n\nimport './Scroll.css';\n\nconst Scroll = (props) => {\n    return (\n        <div className=\"scrollContainer\" style={{  }}>\n            {props.children}        {/* scroll will use it's children to render here*/}\n        </div>\n    );\n};\n\nexport default Scroll;","/*\n* REDUX\n*/\n\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_FIRST_PEOPLE_PENDING = 'REQUEST_FIRST_PEOPLE_PENDING';\nexport const REQUEST_FIRST_PEOPLE_SUCCESS = 'REQUEST_FIRST_PEOPLE_SUCCESS';\nexport const REQUEST_FIRST_IMAGES_SUCCESS = 'REQUEST_FIRST_IMAGES_SUCCESS';\nexport const REQUEST_FIRST_PEOPLE_FAILED = 'REQUEST_FIRST_PEOPLE_FAILED';\nexport const REQUEST_MORE_PEOPLE_PENDING = 'REQUEST_MORE_PEOPLE_PENDING';\nexport const REQUEST_MORE_PEOPLE_SUCCESS = 'REQUEST_MORE_PEOPLE_SUCCESS';\nexport const REQUEST_MORE_IMAGES_PENDING = 'REQUEST_MORE_IMAGES_PENDING';\nexport const REQUEST_MORE_IMAGES_SUCCESS = 'REQUEST_MORE_IMAGES_SUCCESS';\nexport const REQUEST_MORE_PEOPLE_FAILED = 'REQUEST_MORE_PEOPLE_FAILED';\nexport const CHANGE_ROUTE = 'CHANGE_ROUTE';\n\n/*\n* REACT\n*/\nexport const INITIAL_ROUTE = 'main';\nexport const IMPRINT_ROUTE = 'imprint';\nexport const TECHNOLOGYINFO_ROUTE = 'technology';","import React, { Fragment } from 'react';\n\nimport \"./Card.css\";\n\nconst nameImageSwitch = (name, species) => {\n    switch (name) {\n        case 'Luke Skywalker':\n            return <img alt={`${name}`} src={`images/cards/luke-skywalker.png`} />;\n        case 'R2-D2':\n            return <img alt={`${name}`} src={`images/cards/r2d2.png`} />;\n        case 'Darth Vader':\n            return <img alt={`${name}`} src={`images/cards/darth-vader.png`} />;\n        case 'C-3PO':\n            return <img alt={`${name}`} src={`images/cards/c3p0.png`} />;\n        case 'Leia Organa':\n            return <img alt={`${name}`} src={`images/cards/princess-leia.png`} />;\n        case 'Obi-Wan Kenobi':\n            return <img alt={`${name}`} src={`images/cards/obiwan-kenobi.png`} />;\n        case 'Boba Fett':\n            return <img alt={`${name}`} src={`images/cards/boba-fett.png`} />;\n        case 'Ackbar':\n            return <img alt={`${name}`} src={`images/cards/admiral-ackbar.png`} />;\n        case 'Chewbacca':\n            return <img alt={`${name}`} src={`images/cards/chewbacca.png`} />;\n        case 'Darth Maul':\n            return <img alt={`${name}`} src={`images/cards/darth-maul.png`} />;\n        case 'Palpatine':\n            return <img alt={`${name}`} src={`images/cards/emperor-palpatine.png`} />;\n        case 'Greedo':\n            return <img alt={`${name}`} src={`images/cards/greedo.png`} />;\n        case 'Han Solo':\n            return <img alt={`${name}`} src={`images/cards/han-solo.png`} />;\n        case 'Jabba Desilijic Tiure':\n            return <img alt={`${name}`} src={`images/cards/jabba-the-hutt.png`} />;\n        case 'Jango Fett':\n            return <img alt={`${name}`} src={`images/cards/jango-fett.png`} />;\n        case 'Lando Calrissian':\n            return <img alt={`${name}`} src={`images/cards/lando-calrissian.png`} />;\n        case 'Lobot':\n            return <img alt={`${name}`} src={`images/cards/lobot.png`} />;\n        case 'Qui-Gon Jinn':\n            return <img alt={`${name}`} src={`images/cards/qui-gon-jinn.png`} />;\n        case 'Yoda':\n            return <img alt={`${name}`} src={`images/cards/yoda.png`} />;\n        case 'Wicket Systri Warrick':\n            return <img alt={`${name}`} src={`images/cards/ewok.png`} />;\n        default: {\n            switch (species) {\n                case 'Human':\n                    return <img alt={`${name}`} src={`images/cards/red-five.png`} />;\n                case 'Mirialan':\n                    return <img alt={`${name}`} src={`images/cards/mirialan.png`} />;\n                case \"Twi'lek\":\n                    return <img alt={`${name}`} src={`images/cards/twilek.png`} />;\n                default:\n                    return <img alt={`${name}`} src={`images/cards/nothing_declared.png`} />;\n            }\n        }\n    }\n}\n\n\nconst Card = ({ name, height, mass, birth_year, species, id }) => {         //receiving props and destructuring them in the brackets\n\n    return (\n        <Fragment>\n            <div className='card tc dib br3 pa3 ma2 grow bw2 shadow-5'>\n                {\n                    (Array.isArray(species) && species.length > 0) ?\n                        <img alt={`loading_image`} src={`images/cards/loading_image.png`} />\n                        : nameImageSwitch(name, species)\n                }\n                <div>\n                    <h2>{name}</h2>\n                    <p>Height: {height} {height === \"unknown\" ? '' : 'cm'}</p>\n                    <p>Mass: {mass} {mass === \"unknown\" ? '' : 'kg'}</p>\n                    <p>Birth Year: {birth_year.replace(\"BBY\", \" BBY\")}</p>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Card;\n\n","import React from 'react'\n\nimport './LoadingSpinner.css';\n\n\nconst LoadingSpinner = ({ swapiLabel }) => {\n    return (\n        <div className=\"loadingContainer\">\n            <div className=\"circleLoading\"></div>\n            {\n                swapiLabel &&\n                <span className=\"morePeopleLoading\">fetching from <a href=\"https://swapi.co\" target=\"_blank\" rel=\"noopener noreferrer\">swapi.co</a></span>\n            }\n        </div>\n    );\n}\n\nexport default LoadingSpinner;\n","import React, { Fragment } from 'react';\nimport Card from './Card';\nimport LoadingSpinner from './Layout/LoadingSpinner/LoadingSpinner'\n\nimport './CardList.css';\n\nconst CardList = ({ people, morePeoplePending }) => {          //using people array as props\n    /*\n    if (true) {\n        throw new Error('noooo!');          this would throw an error to test the error boundry written in ErrorBoundry.js\n    }*/\n    return (\n        <Fragment>  {/* this fragment is to wrap all returned cards, but will avoid a additional wrap div */}\n            {   //wrap in curly brackets cause it's javascript\n                people.map((person, i) => {           //for each user in people array\n                    return (                        //return of the map function \n                        <Card\n                            key={i}\n                            id={i}\n                            name={person.name}\n                            height={person.height}\n                            mass={person.mass}\n                            birth_year={person.birth_year}\n                            species={person.species}\n                        />);\n                })\n            }\n            {\n                morePeoplePending &&\n                <LoadingSpinner swapiLabel={true} />\n            }\n        </Fragment>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nimport './SearchBox.css';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className=\"pa1\">\n            <input\n                aria-label='Search Characters'\n                className=\"pa3 searchBox\"\n                type='search'\n                placeholder='Search characters'\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch() {        //if an error appears, this function will run = like try/catch in Java\n        this.setState({ hasError: true })       //the state will be set to hasError=true and it will be rerendered \n    }\n\n    render() {\n        if (this.state.hasError) {      //if the error appeared, a proper error message will be displayed\n            return <h1>Ooops. That is not good</h1>\n        }\n        return this.props.children      //will render the cardlist component when no errors appeared\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\n\nimport './Header.css';\nimport { INITIAL_ROUTE } from '../../../constants';\n\n\nclass Header extends Component {\n    shouldComponentUpdate(nextProps, nextState) {       //the lifecycle hook gives us the ability to restrict the updating of a component    \n        return false;                                   //never update this component! \n    }\n    render() {\n        const { onRouteChange } = this.props;\n        return <h1 className=\"header f1\" onClick={() => onRouteChange(INITIAL_ROUTE)}>Star Wars Characters</h1>;\n    }\n}\n\nexport default Header;","import React from 'react'\n\nimport './TechnologyInfoButton.css';\nimport { TECHNOLOGYINFO_ROUTE } from '../../../constants';\n\n\nconst TechnologyInfoButton = ({ onRouteChange }) => {\n    return <div className=\"TechnologyInfoButtonContainer\"> <img alt=\"Technology Info Button\" className=\"TechnologyInfoButton\" onClick={() => onRouteChange(TECHNOLOGYINFO_ROUTE)} src=\"images/code.png\"></img></div>\n}\n\nexport default TechnologyInfoButton;","import React from 'react'\n\nimport './ImprintButton.css';\nimport { IMPRINT_ROUTE } from '../../../constants';\n\n\nconst ImprintButton = ({ onRouteChange }) => {\n    return <div className=\"ImprintButtonContainer\"> <img alt=\"Imprint Button\" className=\"ImprintButton\" onClick={() => onRouteChange(IMPRINT_ROUTE)} src=\"images/imprint.png\"></img> </div>\n}\n\nexport default ImprintButton;","import React, { Component, Suspense, lazy, Fragment } from 'react';   //destructuring (instead of React.Component)\n\nimport {\n    INITIAL_ROUTE,\n    IMPRINT_ROUTE,\n    TECHNOLOGYINFO_ROUTE\n} from '../../constants'       //get constants form constants file\n\nimport CardList from '../../components/CardList';\nimport SearchBox from '../../components/SearchBox';\nimport Scroll from '../../components/Scroll';\nimport ErrorBoundry from '../../components/ErrorBoundry';\nimport Header from '../../components/Layout/Header/Header';\nimport LoadingSpinner from '../../components/Layout/LoadingSpinner/LoadingSpinner';\nimport TechnologyInfoButton from '../../components/Layout/TechnologyInfoButton/TechnologyInfoButton';\n\n\nimport './MainPage.css'; //to import the appropriate css file for this component\nimport ImprintButton from '../../components/Layout/ImprintButton/ImprintButton';\n\n\nconst AsyncPageTechnologyInfo = lazy(() => import('../../components/Pages/TechnologyInfo/TechnologyInfo'));\nconst AsyncPageImprint = lazy(() => import('../../components/Pages/Imprint/Imprint'));\n\nclass MainPage extends Component {   //class App will use the component lib / Component expects that there is a render function in this class\n\n    getRouteComponent = (route, onSearchChange, firstPeoplePending, morePeoplePending) => {\n\n        if (route === INITIAL_ROUTE) {\n            return (\n                <Fragment>\n                    <SearchBox searchChange={onSearchChange} />\n                    <Scroll>\n                        <ErrorBoundry>\n                            {firstPeoplePending ?  //return html back depending on the isPending flag\n                                <LoadingSpinner swapiLabel={true} />\n                                :\n                                <CardList people={this.filterPeople()} morePeoplePending={morePeoplePending} />\n                            }\n                        </ErrorBoundry>\n                    </Scroll>\n                </Fragment>\n            )\n        } else if (route === IMPRINT_ROUTE) {\n            return (\n                <Suspense fallback={<LoadingSpinner swapiLabel={false} />}>\n                    <AsyncPageImprint />\n                </Suspense>\n            )\n        } else if (route === TECHNOLOGYINFO_ROUTE) {\n            return (\n                <Suspense fallback={<LoadingSpinner swapiLabel={false} />}>\n                    <AsyncPageTechnologyInfo />\n                </Suspense>\n            )\n        }\n    }\n\n    componentDidMount() {\n        this.props.onRequestPeople();\n    }\n    filterPeople = () => {\n        return this.props.people.filter(person => {      //filter the people and return them to filteredpeople\n            return person.name.toLowerCase().includes(this.props.searchField.toLowerCase());\n        });\n    }\n\n    render() {\n        const { route, onRouteChange, onSearchChange, firstPeoplePending, morePeoplePending } = this.props;\n        let page = this.getRouteComponent(route, onSearchChange, firstPeoplePending, morePeoplePending);\n\n        return (\n            <div className='tc' >\n                <div className='wrapper'>\n                    <Header onRouteChange={onRouteChange} />\n                    {page}\n                </div>\n                <TechnologyInfoButton onRouteChange={onRouteChange} />\n                <ImprintButton onRouteChange={onRouteChange} />\n            </div>\n        )\n    }\n}\nexport default MainPage;\n\n//connect is a higher order function - will return another function -> that's why it is written that way above\n//\n//connect() is subscribed to the redux store now and it accepts 2 params: \n//1st is mapStateToProps: what state the component is interested in\n//2nd is mapDispatchToProps: ","export const getFirstPeople = async (link) => {\n    let nextLink = \"\";\n    let data = await fetch(link);\n    let data_json = await data.json();\n    let people = data_json.results;\n    nextLink = await data_json.next;\n    return { people, nextLink };\n}\n\nexport const getMorePeople = async (link) => {\n    let tempPeople = [];\n    let nextLink = undefined;\n\n    for (let i = 0; i < 6; i++) {\n        link = (nextLink === undefined) ? link : nextLink;\n        let data = await fetch(link);\n        let data_json = await data.json();\n        let morePeople = data_json.results;\n\n        nextLink = await data_json.next;\n        tempPeople = [...tempPeople, ...morePeople];\n    }\n    return tempPeople;\n}\n\n\nexport const replaceSpeciesName = async (people) => {\n    return await Promise.all(\n        people.map(async (person, i) => {\n            if (Array.isArray(person.species) && person.species.length) {\n\n                let data = await fetch(person.species[0]);\n                let data_json = await data.json();\n                person.species = await data_json.name;\n                return person;\n            }\n            else {\n                return person;\n            }\n        })\n    );\n}\n","import React, { Component } from 'react';   //destructuring (instead of React.Component)\nimport { connect } from 'react-redux';\nimport MainPage from './MainPage/MainPage'\n\nimport { setRoute, setSearchField, requestPeople } from '../actions'\n\nconst mapStateToProps = state => {\n    return {\n        route: state.changeRoute.route,\n        searchField: state.searchPeople.searchField,            //prop searchfield will get the state of the searchPeople.searchField\n        firstPeoplePending: state.requestPeople.firstPeoplePending,               // -''-\n        morePeoplePending: state.requestPeople.morePeoplePending,\n        people: state.requestPeople.people                      // -''-\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        //onSearchChange is a function which will pass the event to it's inner \n        //there the dispatch will get called which will call the setSearchField action in redux and \n        //it will hand over the event.target.value (which is the stuff typed in the search box)\n        onRouteChange: (route) => dispatch(setRoute(route)),\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestPeople: () => dispatch(requestPeople())                    //requestPeople needs the dispatch function\n    }\n}\n\nclass App extends Component {   //only the react \n    render() {\n        return <MainPage {...this.props} />\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n//connect is a higher order function - will return another function -> that's why it is written that way above\n//\n//connect() is subscribed to the redux store now and it accepts 2 params: \n//1st is mapStateToProps: what state the component is interested in\n//2nd is mapDispatchToProps: ","import {\n    CHANGE_SEARCH_FIELD,\n    REQUEST_FIRST_PEOPLE_PENDING,\n    REQUEST_FIRST_PEOPLE_SUCCESS,\n    REQUEST_FIRST_IMAGES_SUCCESS,\n    REQUEST_MORE_PEOPLE_PENDING,\n    REQUEST_MORE_PEOPLE_SUCCESS,\n    REQUEST_MORE_IMAGES_SUCCESS,\n    REQUEST_FIRST_PEOPLE_FAILED,\n    CHANGE_ROUTE\n} from './constants'       //get constants form constants file\n\n\nimport { getFirstPeople, getMorePeople, replaceSpeciesName } from './api/api';\n\n//first action in here - this action will receive input of text which the user types - it will return a object with type and payload\n//this action will send the object on to the reducer\nexport const setRoute = (route) => ({\n    type: CHANGE_ROUTE,                  //constants are usually capitalized - we use a variable here to avoid misspelling \n    payload: route\n})\n\n\n\n//first action in here - this action will receive input of text which the user types - it will return a object with type and payload\n//this action will send the object on to the reducer\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,                  //constants are usually capitalized - we use a variable here to avoid misspelling \n    payload: text\n})\n\n//actions can just be objects {}\n\nexport const requestPeople = () => (dispatch) => {          //this action will take the dispatch to get access to it - requestPeople returns a function and thunk middleware will hook on it\n    dispatch({ type: REQUEST_FIRST_PEOPLE_PENDING });             //dispatch the pending action - \"will call the action in reducer\" - so the PENDING will be called right away\n    getFirstPeople('https://swapi.co/api/people/')         //make this http request & convert it to JSON                    \n        .then(firstPeople => dispatch({ type: REQUEST_FIRST_PEOPLE_SUCCESS, payload: firstPeople.people, next: firstPeople.nextLink }))        //call the SUCCESS in reducer with the user payload\n        .then(firstPeople => {\n            replaceSpeciesName(firstPeople.payload)\n                .then(firstPeopleWSpecies => {\n                    dispatch({ type: REQUEST_FIRST_IMAGES_SUCCESS, payload: firstPeopleWSpecies });\n                    dispatch({ type: REQUEST_MORE_PEOPLE_PENDING });\n                    getMorePeople(firstPeople.next)\n                        .then(morePeople => dispatch({ type: REQUEST_MORE_PEOPLE_SUCCESS, payload: morePeople }))\n                        .then(morePeople => {\n                            replaceSpeciesName(morePeople.payload)\n                                .then(morePeopleWSpecies => {\n                                    dispatch({ type: REQUEST_MORE_IMAGES_SUCCESS, payload: { people: morePeopleWSpecies, position: firstPeople.payload.length } });\n                                })\n                        })\n                })\n        })\n        .catch(error => dispatch({ type: REQUEST_FIRST_PEOPLE_FAILED, payload: error }))\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    console.log(\"process env: \" + process.env.PUBLIC_URL);\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n\n  }\n}\n\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n","import {\n    INITIAL_ROUTE,\n    CHANGE_SEARCH_FIELD,\n    REQUEST_FIRST_PEOPLE_PENDING,\n    REQUEST_FIRST_PEOPLE_SUCCESS,\n    REQUEST_FIRST_IMAGES_SUCCESS,\n    REQUEST_MORE_PEOPLE_PENDING,\n    REQUEST_MORE_PEOPLE_SUCCESS,\n    REQUEST_MORE_IMAGES_SUCCESS,\n    REQUEST_FIRST_PEOPLE_FAILED,\n    CHANGE_ROUTE\n} from './constants'       //get constants form constants file\n\n\n\n\n\n\n/**\n * CHANGEROUTE REDUCER\n */\n\n\n//define the initialstate in the reducer \nconst initialRoute = {\n    route: INITIAL_ROUTE         //initial object in the redux store\n}\n\n//searchPeople function -> use default params (initialState, empty action object)\n//reducers get a input of a state and action -> if this one get something we care about (like searching people), we will do something\nexport const changeRoute = (state = initialRoute, action = {}) => {\n    switch (action.type) {\n        case CHANGE_ROUTE:       //if a CHANGE_SEARCH_FIELD action comes in, we will do something\n            return Object.assign({}, state, { route: action.payload })\n        //1st param= new object\n        //2nd param= state we receiving\n        //3rd param=is what we want to change in the state\n        //so what we return is a new object with everything in the state + new searchField -> 2nd principle: State is read only\n        default:\n            return state    //if a other action comes in, return the state as it was passed over and do not change anything\n    }\n}\n\n\n\n\n/**\n * SEARCHPEOPLE REDUCER\n */\n\n\n//define the initialstate in the reducer \nconst initialStateSearch = {\n    searchField: ''         //initial object in the redux store\n}\n\n//searchPeople function -> use default params (initialState, empty action object)\n//reducers get a input of a state and action -> if this one get something we care about (like searching people), we will do something\nexport const searchPeople = (state = initialStateSearch, action = {}) => {\n    switch (action.type) {\n        case CHANGE_SEARCH_FIELD:       //if a CHANGE_SEARCH_FIELD action comes in, we will do something\n            return Object.assign({}, state, { searchField: action.payload })\n        //1st param= new object\n        //2nd param= state we receiving\n        //3rd param=is what we want to change in the state\n        //so what we return is a new object with everything in the state + new searchField -> 2nd principle: State is read only\n        default:\n            return state    //if a other action comes in, return the state as it was passed over and do not change anything\n    }\n}\n\n/**\n * REQUESTING PEOPLE REDUCER\n */\n\n\n\nconst initialStatePeople = {\n    firstPeoplePending: false,\n    morePeoplePending: false,\n    people: [],\n    error: ''\n}\n\nexport const requestPeople = (state = initialStatePeople, action = {}) => {\n    switch (action.type) {\n        case REQUEST_FIRST_PEOPLE_PENDING:\n            return Object.assign({}, state, { firstPeoplePending: true })      //everything in the state + new state isPending\n        case REQUEST_FIRST_PEOPLE_SUCCESS:\n            return Object.assign({}, state, { people: action.payload, firstPeoplePending: false })      //everything in the state + new state isPending & people\n        case REQUEST_FIRST_IMAGES_SUCCESS:\n            return Object.assign({}, state, { people: action.payload })      //everything in the state + new state isPending & people\n        case REQUEST_MORE_PEOPLE_PENDING:\n            return Object.assign({}, state, { morePeoplePending: true })      //everything in the state + new state isPending\n        case REQUEST_MORE_PEOPLE_SUCCESS:\n            return Object.assign({}, state, { people: state.people.concat(action.payload), morePeoplePending: false })      //everything in the state + new state isPending & people\n        case REQUEST_MORE_IMAGES_SUCCESS:\n            return Object.assign({}, state, { people: [...state.people.slice(0, action.payload.position), ...action.payload.people] })      //everything in the state + new state isPending & people\n        case REQUEST_FIRST_PEOPLE_FAILED:\n            return Object.assign({}, state, { firstPeoplePending: false, error: action.payload })      //everything in the state + errorstate\n        default:\n            return state\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'          //importing the provider from the react-redux\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';      //to use tachyons lib\nimport { changeRoute, searchPeople, requestPeople } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ changeRoute, searchPeople, requestPeople });       //combine the reducers from the reducers file into one root reducer\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunkMiddleware, logger)));\n//to create the store with the root reducer and apply the thunkMiddleware and the logger to the store\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n//render the provider with the app to the html tag with root as id (is in public/index.html)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}